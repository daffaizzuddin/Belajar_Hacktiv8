# Assignment Python 1 

Link Repository : https://github.com/daffaizzuddin/Belajar_Hacktiv8.git

## Import Library
import pandas as pd # primary data structure library
import numpy as np # useful for many scientific computing in Python
%matplotlib inline 
import matplotlib.pyplot as plt 
import matplotlib as mpl
from wordcloud import WordCloud, STOPWORDS
from PIL import Image # to convert image into arrays
import folium

print('Libraries are already imported')
## Import Dataset
df = pd.read_csv("/Users/ASUS/Hacktiv8/data/london_crime_by_lsoa.csv")

print('Dataset is ready')
## Exploratory Data Analysis
melihat 5 baris dataset teratas
df.head()
melihat 5 baris dataset terbawah
df.tail()
melihat semua kolom dan tipe data
df.info()
melihat header list
df.columns.values
melihat index list
df.index.values
melihat shape dari dataset
df.shape
melihat statistik deskriptif dari setiap kolom untuk jenis objek
df.describe(include='O')
melihat statistik deskriptif kolom tipe int
df.describe()
Check missing value
df.isnull().sum()
Check duplicate data
df.duplicated()
melihat nilai unique dari setiap kolom
print('borough: ', df['borough'].unique())
print('major_category: ', df['major_category'].unique())
print('minor_category: ', df['minor_category'].unique())
print('value: ', df['value'].unique())
print('year: ', df['year'].unique())
print('month: ', df['month'].unique())
## Pre-processing & Visualization
### Area Plot
Pertanyaan: Wilayah mana yang memiliki tingkat kumulatif kasus kriminal tahunan dan bulanan tertinggi?
Create a required dataframe
ap1 = df.pivot_table(index='year', columns ='borough', values='value', aggfunc=sum)
ap1
Create a required dataframe
ap2 = df.pivot_table(index='month', columns ='borough', values='value', aggfunc=sum)
ap2
Pastikan tidak ada missing value dalam dataframe
ap1.isnull().sum()
Pastikan tidak ada missing value dalam dataframe
ap2.isnull().sum()
Create area plots
ap1.plot(kind='area', 
             alpha=0.25, # 0-1, default value a= 0.5
             stacked=False,
             figsize=(20, 10)
        )

plt.title('Sum of Criminal Cases per Borough')
plt.ylabel('Number of Criminal Cases')
plt.xlabel('Years')

plt.show()
Dari plot area di atas, kita dapat menyimpulkan bahwa Westminster adalah tingkat kumulatif kasus kriminal tahunan tertinggi dan terjadi peningkatan kasus yang signifikan di tahun 2012.
ap2.plot(kind='area', 
             alpha=0.25, # 0-1, default value a= 0.5
             stacked=False,
             figsize=(20, 10),
            )

plt.title('Sum of Criminal Cases per Borough')
plt.ylabel('Number of Criminal Cases')
plt.xlabel('Month')

plt.show()
Dari plot area di atas, kita dapat menyimpulkan bahwa Westminster adalah tingkat kumulatif kasus kriminal bulanan tertinggi. Pergerakan data time series cenderung naik turun, namun terlihat masih stasioner pada rata-ratanya.
### Histogram
Pertanyaan: Berapakah distribusi frekuensi dari 3 kasus kriminal terbanyak di borough London pada tahun 2008-2013?
Create the required dataframe
ht1 = df[df['year'] <= 2013]
ht1
Pra-pemrosesan dataset sehingga kami memiliki 3 wilayah teratas yang memiliki kasus kriminal tertinggi
ht1 = ht1.pivot_table(index='borough', columns='year', values='value', aggfunc='sum')
ht1['Total'] = ht1.sum(axis=1)
ht1.sort_values(['Total'], ascending=False, axis=0, inplace=True)
ht1_top3 = ht1.drop('Total', axis=1, inplace=True)
ht1_top3 = ht1.head(n=3).transpose()
ht1_top3

Generate histogram
ht1_top3.plot(kind='hist', figsize=(10, 6))

plt.title('Histogram of Criminal Cases from Westminster, Lambeth, Camden from 2008-2013')
plt.ylabel('Number of Years')
plt.xlabel('Number of Criminal Cases')

plt.show()
Generate histogram
# let's get the x-tick values
count, bin_edges = np.histogram(ht1_top3, 15)

# un-stacked histogram
ht1_top3.plot(kind ='hist', 
          figsize=(10, 6),
          bins=15,
          alpha=0.6,
          xticks=bin_edges,
          color=['coral', 'darkslateblue', 'mediumseagreen']
         )

plt.title('Histogram of Criminal Cases from Westminster, Lambeth, Camden from 2008-2013')
plt.ylabel('Number of Years')
plt.xlabel('Number of Criminal Cases')

plt.show()
Dari histogram di atas, dapat disimpulkan bahwa distribusi frekuensi kasus kriminal di Westminster cenderung menyebar dibandingkan Lambeth dan Camden.
### Bar Chart
Pertanyaan: Buat grafik batang horizontal yang menunjukkan 10 besar dari total kasus kriminal di London untuk periode 2008 - 2016.
Create the required dataframe
bc1 = df.pivot_table(index='borough', columns='year', values='value', aggfunc='sum')
bc1['Total'] = bc1.sum(axis=1)
bc1.sort_values(['Total'], ascending=False, axis=0, inplace=True)
bc1_top10 = bc1['Total'].head(n=10)
bc1_top10
Create Horizontal Bar Plot
bc1_top10.plot(kind='barh', figsize=(12, 12), color='steelblue')
plt.xlabel('Number of Criminal Cases')
plt.title('Top 10 Borough to the Criminal Cases between 2008-2016')
# for index, value in enumerate(df_top15): 
#     label = format(int(value), ',') # format int with commas
#     # place text at the end of bar (subtracting 47000 from x, and 0.1 from y to make it fit within the bar)
#     plt.annotate(label, xy=(value - 47000, index - 0.10), color='white')
plt.show()
Dari grafik batang horizontal di atas, kita tahu bahwa Westminster memiliki total kasus kriminal tertinggi, dan diikuti oleh Lambeth, Southwark, Camden, Newham, Croydon, Ealing, Islington, Tower Hamlets, Brent sebagai 10 teratas dari total kasus kriminal
### Pie Chart
Pertanyaan: Berapa persentase kategori kriminal mayor dan minor yang terjadi di London?
Make the required dataframe
pc1 = df['major_category'].value_counts()
Make the required dataframe
pc2 = df['minor_category'].value_counts()
Create Pice Chart
explode_list = [0.1, 0, 0, 0, 0.1, 0, 0.1, 0, 0.2] # ratio for each continent with which to offset each wedge.

pc1.plot(kind='pie',
         figsize=(15, 6),
         autopct='%1.1f%%', 
         startangle=90,    
         shadow=True,       
         labels=None,         # turn off labels on pie chart
         pctdistance=1.12,    # the ratio between the center of each pie slice and the start of the text generated by autopct 
         explode=explode_list # 'explode' lowest 3 continents
         )

# scale the title up by 12% to match pctdistance
plt.title('Major Category of London Criminal Cases', y=1.12) 

plt.axis('equal') 

# add legend
plt.legend(labels=df['major_category'].unique(), loc='upper left') 

plt.show()
Dari diagram lingkaran di atas, kita tahu bahwa Pencurian adalah yang paling sering muncul sebagai kategori utama dengan 29,4%, sedangkan seks adalah kebalikannya dengan 0,8%.
Create Pice Chart
pc2.plot(kind='pie',
         figsize=(15, 6),
         autopct='%1.1f%%', 
         startangle=90,    
         shadow=True,       
         labels=None,         # turn off labels on pie chart
         pctdistance=1.12,    # the ratio between the center of each pie slice and the start of the text generated by autopct 
         )

# scale the title up by 12% to match pctdistance
plt.title('Major Category of London Criminal Cases', y=1.12) 

plt.axis('equal') 

# add legend
plt.legend(labels=df['minor_category'].unique(), loc='upper left') 

plt.show()
Dari diagram lingkaran di atas, kita tahu bahwa sebagian besar kategori minor muncul dalam persentase yang sama.
### Box Plot
Buat Box Plot untuk memvisualisasikan sebaran total kasus kriminal di setiap tahun di Borough.
Create the required dataframe
bp1 = df.pivot_table(index='borough', columns='year', values='value', aggfunc=sum)
bp1.head()
Create Horizontal Box Plot
bp1.plot(kind='box', figsize=(10, 7), color='blue', vert=True)

plt.title('Box plots of London Criminal Cases each Year')
plt.xlabel('Year')
plt.ylabel('Number of Cases')

plt.show()
Dari box plot di atas terlihat bahwa sebaran jumlah kasus pidana cenderung sama setiap tahunnya, namun pada tahun 2012 memiliki sebaran yang cenderung lebih luas. Terdapat outlier di bagian atas dan bawah rentang box plot yaitu adanya kelurahan dengan 0 kasus dan ada juga kelurahan yang memiliki kasus sangat tinggi setiap tahunnya.
### Scatter Plot
Pertanyaan: Buatlah scatter plot dari total kasus kriminal di London pada periode 2008-2013
Create a required dataframe
sp1 = df.pivot_table(index='year', columns='borough', values='value', aggfunc=sum)
sp1['Total'] = sp1.sum(axis=1)
sp11 = sp1[['Total']]
sp11.reset_index(inplace=True)
sp11
Make sure that Total column is correct
print('Total: ',sp1.Total.sum())
print('Value: ',df.value.sum())
Create a scatter plot
sp11.plot(kind='scatter', x='year', y='Total', figsize=(10, 6), color='darkblue')

plt.title('Total London Criminal Cases from 2008 - 2016')
plt.xlabel('Year')
plt.ylabel('Number of Cases')

plt.show()
Dari scatter plot di atas, kita dapat menyimpulkan bahwa perbedaan antar tahun tidak terlalu signifikan.
### Word Clouds
Pertanyaan: Kata-kata kategori utama apa yang sering muncul dalam kasus kriminal di London?
Create list
wc1 = df['major_category']
Kita akan memvisualisasikan word cloud dengan mask, jadi sebelum menjalankan kode di bawah ini, dapatkan file london mask dan taruh di folder yang sama dengan notebook ini.
london_mask = np.array(Image.open("/Users/ASUS/Hacktiv8/Belajar_Hacktiv8/Assignment/Assgn_1/data/london_mask.png"))
fig = plt.figure()
fig.set_figwidth(14) # set width
fig.set_figheight(18) # set height

plt.imshow(london_mask, cmap=plt.cm.gray, interpolation='bilinear')
plt.axis('off')
plt.show()
Set stopword
stopwords = set(STOPWORDS)
Create word clouds
# instantiate a word cloud object
london_wc = WordCloud(background_color='white', mask=london_mask, stopwords=stopwords)

# generate the word cloud
london_wc.generate(' '.join(wc1.values))

# display the word cloud
fig = plt.figure()
fig.set_figwidth(14) # set width
fig.set_figheight(18) # set height

plt.imshow(london_wc, interpolation='bilinear')
plt.axis('off')
plt.show()
Dari word clouds di atas, kita tahu bahwa Pidana, Kerusakan, Penanganan, dan Pencurian memiliki ukuran font terbesar, artinya kata-kata tersebut sering muncul dalam kasus-kasus kriminal kategori utama.
### Folium Maps
Pertanyaan: Buat Peta Folium London
Tentukan peta dunia yang berpusat di sekitar London dengan 9 tingkat zoom
world_map = folium.Map(location=[51.50209939078944, -0.12486231307153765], zoom_start=9)

world_map
Create peta Stamen Toner dunia yang berpusat di sekitar London
world_map = folium.Map(location=[51.50209939078944, -0.12486231307153765], zoom_start=13, tiles='Stamen Toner')

world_map
Create peta Medan Benang Sari dunia yang berpusat di sekitar London
world_map = folium.Map(location=[51.50209939078944, -0.12486231307153765], zoom_start=13, tiles='Stamen Terrain')

world_map
Dari peta folium di atas, kita bisa mengetahui visualisasi letak geografis kota London
---
# Overall Analysis

Berdasarkan visualisasi data yang telah dilakukan terhadap data kasus kriminal di London tahun 2008-2013, diperoleh informasi bahwa terdapat berbagai kasus kriminal dengan berbagai kategori yang terjadi di London. Kasus yang paling sering adalah Perampokan dan Westminster menjadi daerah dengan kasus terbanyak. Distribusi data setiap tahunnya cenderung sama.